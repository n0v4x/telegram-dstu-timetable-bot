import { Context } from "telegraf";
import { IncomingMessage } from "telegraf/typings/telegram-types";
import { Group, GroupList } from "../lib/parsers/DstuGroupListParser";

export const group = () => async (
  ctx: Context,
  next: () => Promise<void>
): Promise<IncomingMessage | void> => {
  let group: Group | null = null;
  let groupList: GroupList | null = null;

  try {
    ctx.reply("üîé –ü–æ–∏—Å–∫ –≥—Ä—É–ø–ø—ã...");

    groupList = await ctx.dstu.findGroup(ctx.state.groupName);

    group = groupList.groups[0];
  } catch (e) {
    return ctx.reply("üòû –ù–µ—É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≥—Ä—É–ø–ø—É.\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n–°–∞–π—Ç–∏ –î–ì–¢–£ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω.");
  }

  if (group && group.name.toLowerCase() === ctx.state.groupName.toLowerCase()) {
    ctx.state.group = group;
  } else {
    return ctx.reply("üòû –ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
  }

  return await next();
};
